<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=  , initial-scale=1.0">
    <title>Rock Paper Scissor</title>
    <link rel="stylesheet" href="rock.css">
</head>
<body>
    <h1>Rock Paper Scissor</h1>
    <div class="choices">
        <div class="choice" id="rock">
            <img src="./images/pooo.png" alt="error">
        </div>
        <div class="choice" id="paper">
            <img src="./images/po.png" alt="error">
        </div>
        <div class="choice" id="scissor">
            <img src="./images/poo.png" alt="error">
        </div>
    </div>
    <div class="score-board">
        <div class="score">
            <p id="user-score">0</p>
            <p>You</p>
        </div>
        <div class="score">
            <p id="comp-score">0</p>
            <p>Comp</p>
        </div>
    </div>
<div class="msg-container">
    <p id="msg">Play your move</p>
</div> 
<script src="rock.js"></script>
    
</body>
</html>






let userScore = 0;
let compScore = 0;

const choices = document.querySelectorAll(".choice");
const userScorePara = document.querySelector("#user-score");
const compScorePara = document.querySelector("#comp-score");
const msg = document.querySelector("#msg");

const genCompChoice = () => {
    const options = ["rock","paper","scissor"];
    const randIdx = Math.floor(Math.random()*3);
    return options[randIdx];
};

const drawGame= ()=>{
    msg.innerText="Game was Draw..Play again!!!!!.";
    msg.style.backgroundColor="#081b31";
};

const playGame= (userChoice)=>{
    //generate compchoice
    const compChoice= genCompChoice();
     
    if (userChoice===compChoice) {
        drawGame();
    }else{
        let userWin=true;
        if (userChoice==="rock") {
            userWin=compChoice==="paper"?false:true;
        }else if(userChoice==="paper"){
            userWin=compChoice==="scissor"?false:true;
        }else{
            userWin=compChoice==="rock"?false:true;
        }
    
        showWinner(userWin,userChoice,compChoice);
    }
};

const showWinner=(userWin,userChoice,compChoice)=>{
    if(userWin){
        userScore++;
        userScorePara.innerText=userScore;
        msg.innerText=`You Win!  your ${userChoice} beats ${compChoice}` ;
        msg.style.backgroundColor="green";
    }else{
        compScore++;
        compScorePara.innerText=compScore;
        msg.innerText=`You lose ${compChoice} beats your ${userChoice}`;
        msg.style.backgroundColor="red";
    }
};




choices.forEach((choice) => {
    choice.addEventListener("click", ()=>{
        const userChoice= choice.getAttribute("id");
        playGame(userChoice);
    });
    });




*{
    margin: 0;
    padding: 0;
    text-align: center;
}
h1{
    background-color: #081b31;
    color: #fff;
    height: 5rem;
    text-align: center;
    line-height: 5rem;
}
.choice{
    height: 165px;
    width: 165px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
}
img{
    height: 150px;
    width: 150px;
    object-fit: cover;
    border-radius: 50%;
}
.choices{
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 3rem;
    margin-top: 5rem;
}
.choice:hover{
    background-color: #081b31;
    cursor: pointer;
}
.score-board{
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 2rem;
    margin-top: 3rem;
    gap: 5rem;
}
#user-score,
#comp-score{
    font-size: 4rem;
}
#msg{
    background-color: #081b31;
    color: #fff;
    font-size: 2rem;
    display: inline;
    padding: 1rem;
    border-radius: 1rem;
}
.msg-container{
    margin-top: 5rem;
}
